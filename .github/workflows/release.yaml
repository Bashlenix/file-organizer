name: Release Statically Linked Rust Binary

on:
  push:
    tags:
      - 'v*'  # Trigger on tags like 'v1.0.0'

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl       # Linux (musl)
          - aarch64-unknown-linux-musl      # ARM Linux (musl)
          - x86_64-apple-darwin             # ✅ macOS (new)

    runs-on: ${{ matrix.target == 'x86_64-apple-darwin' && 'macos-latest' || 'ubuntu-latest' }}

    env:
      BINARY_NAME: file_organizer

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: ⚙️ Install Required Rust Targets
        run: rustup target add ${{ matrix.target }}

      - name: 📦 Install Cross (Linux Only)
        if: matrix.target != 'x86_64-apple-darwin'
        run: cargo install cross

      - name: 🏗️ Build Rust Binary
        run: |
          cd code
          if [[ "${{ matrix.target }}" == "x86_64-apple-darwin" ]]; then
            cargo build --release --target ${{ matrix.target }}
          else
            cross build --target ${{ matrix.target }} --release --verbose
          fi

      - name: 📦 Package Binary
        run: |
          mkdir -p release
          if [[ "${{ matrix.target }}" == "x86_64-apple-darwin" ]]; then
            cp code/target/${{ matrix.target }}/release/$BINARY_NAME release/
            tar -czvf $BINARY_NAME-macos.tar.gz -C release $BINARY_NAME
          else
            cp code/target/${{ matrix.target }}/release/$BINARY_NAME release/
            tar -czvf $BINARY_NAME-${{ matrix.target }}.tar.gz -C release $BINARY_NAME
          fi

      - name: 🚀 Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.BASHI }}
